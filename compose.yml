services:

  postgres-db:
    image: postgres:17.4-alpine3.21
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: jooq-demo
    ports:
      - "5432:5432"
    volumes:
      - ./config/docker/postgresql/01_database_init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - demo-net

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres-db
    ports:
      - "15433:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: t@t.t
      PGADMIN_DEFAULT_PASSWORD: t
    networks:
      - demo-net
    volumes:
      - pgadmin_data:/var/lib/pgadmin/

  redis-cache:
    image: redis:8.2.2-alpine3.22
    container_name: redis
    ports:
      - "6379:6379"
    command: [
      "redis-server",
      "--requirepass", "redis",
      "--aclfile", "/usr/local/etc/redis/users.acl"
    ]
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data
      - ./config/docker/redis/users.acl:/usr/local/etc/redis/users.acl

  jooq-service:
    image: localhost/java-jooq-spring:0.0.1
    depends_on:
      - postgres-db
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: root
      JWT_SECRET_KEY: mySuperSecretKeyThatIsVeryLongAndSecureAndRandom1790!@#$%^&*()_+
    networks:
      - demo-net

networks:
  demo-net:
    driver: bridge

volumes:
  postgres_data: {}
  pgadmin_data: {}
  redis_data: {}

